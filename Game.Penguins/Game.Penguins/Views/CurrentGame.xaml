<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hx="clr-namespace:HexGridControl;assembly=HexGridControl"   
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
                    xmlns:viewModels="clr-namespace:Game.Penguins.ViewModels">

    <Style x:Key="ItemGroupLabelStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="{adonisUi:Space 0, 2, 0, 0.5}" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <DataTemplate DataType="{x:Type viewModels:CurrentGameViewModel}">
        <DataTemplate.Resources>
            <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        </DataTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <hx:HexList Margin="5"
                    RowCount="8"
                    ColumnCount="8"
                    Grid.Column="0"
                    Width="750"
                    Height="600"
                    SelectedItem="{Binding SelectedCell}"
                    Orientation="Vertical"
                    ItemsSource="{Binding Cells}">
                <hx:HexList.ItemContainerStyle>
                    <Style TargetType="{x:Type hx:HexItem}">
                        <Setter Property="Grid.Row" Value="{Binding Path=Y}" />
                        <Setter Property="Grid.Column" Value="{Binding Path=X}" />
                        <Setter Property="BorderThickness" Value="0.6" />
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Background" Value="White" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsSelectedFirst}" Value="True">
                                <Setter Property="BorderBrush" Value="BlueViolet" />
                                <Setter Property="BorderThickness" Value="1.2" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelectedSecond}" Value="True">
                                <Setter Property="BorderBrush" Value="LimeGreen" />
                                <Setter Property="BorderThickness" Value="1.2" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="DarkSlateBlue"/>
                                <Setter Property="BorderThickness" Value="1.3" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </hx:HexList.ItemContainerStyle>
                <hx:HexList.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Image Source="/Ressources/ice.png" Stretch="UniformToFill" Width="70" Height="70"
                                Visibility="{Binding Path=IsIce, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/fish1.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsOnePoint, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/fish2.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsTwoPoint, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/fish3.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsThreePoint, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/blue.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsBlue, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/red.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsRed, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/yellow.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsYellow, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <Image Source="/Ressources/green.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsGreen, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                            <TextBlock Text="{Binding XY}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" FontWeight="Bold"></TextBlock>
                        </Grid>
                    </DataTemplate>
                </hx:HexList.ItemTemplate>
            </hx:HexList>
            <StackPanel Grid.Column="1">
                <StackPanel Margin="10">
                    <Label Content="Scores :"></Label>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Content="Name" Grid.Column="0"></Label>
                        <Label Content="Points" Grid.Column="1"></Label>
                    </Grid>
                    <ItemsControl ItemsSource="{Binding Players}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"></ColumnDefinition>
                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="{Binding PlayerName}" Grid.Column="0"></Label>
                                    <Label Content="{Binding Points}" Grid.Column="1"></Label>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                <StackPanel Margin="10" HorizontalAlignment="Center">
                    <Label Content="Current player :"></Label>
                    <Label Content="{Binding CurrentPlayerName}"
                           Style="{StaticResource ItemGroupLabelStyle}" Margin="10"></Label>
                    <Image Source="/Ressources/blue.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsBlue, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                    <Image Source="/Ressources/red.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsRed, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                    <Image Source="/Ressources/yellow.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsYellow, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                    <Image Source="/Ressources/green.png" Stretch="UniformToFill" Width="50" Height="50"
                                Visibility="{Binding Path=IsGreen, Converter={StaticResource VisibleIfTrueConverter}}"></Image>
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsPlacePenguinAction, Converter={StaticResource VisibleIfTrueConverter}}">
                    <Label Content="Place your penguin on the map by selecting a card."></Label>
                    <!--<Label Content="Then click on the button below :."></Label>
                    <Button Command="{Binding PlacePenguinCommand}" Content="Place"></Button>-->
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsPlacePenguinAIAction, Converter={StaticResource VisibleIfTrueConverter}}">
                    <Label Content="The AI must place his penguin."></Label>
                    <Label Content="Then click on the button below to continue :"></Label>
                    <Button Command="{Binding PlayAICommand}" Content="Place"></Button>
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsMoveMyPenguinAction, Converter={StaticResource VisibleIfTrueConverter}}">
                    <Label Content="It's your turn."></Label>
                    <Label Content="Select a penguin (from yours) on the map first, then select the destination cell."></Label>
                    <!--<Button Command="{Binding MovePenguinSelectorCommand}" Content="Move it !"></Button>
                    <Label Content="Next, select a card destination on the map and click on the button below :"></Label>
                    <Button Command="{Binding MovePenguinValidationViewModel}" Content="Move it !"></Button>-->
                </StackPanel>
                <StackPanel Visibility="{Binding Path=IsMovePenguinAIAction, Converter={StaticResource VisibleIfTrueConverter}}">
                    <Label Content="It's the turn of the next player (an AI)."></Label>
                    <Label Content="Click on the button below in order to play."></Label>
                    <Button Command="{Binding PlayAICommand}" Content="Play"></Button>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>